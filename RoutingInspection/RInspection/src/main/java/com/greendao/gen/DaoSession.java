package com.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.seatrend.routinginspection.db.table.JudgeTable;
import com.seatrend.routinginspection.db.table.PictureTable;
import com.seatrend.routinginspection.db.table.PlanTable;
import com.seatrend.routinginspection.entity.PhotoOnlineDataBean;

import com.greendao.gen.JudgeTableDao;
import com.greendao.gen.PictureTableDao;
import com.greendao.gen.PlanTableDao;
import com.greendao.gen.PhotoOnlineDataBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig judgeTableDaoConfig;
    private final DaoConfig pictureTableDaoConfig;
    private final DaoConfig planTableDaoConfig;
    private final DaoConfig photoOnlineDataBeanDaoConfig;

    private final JudgeTableDao judgeTableDao;
    private final PictureTableDao pictureTableDao;
    private final PlanTableDao planTableDao;
    private final PhotoOnlineDataBeanDao photoOnlineDataBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        judgeTableDaoConfig = daoConfigMap.get(JudgeTableDao.class).clone();
        judgeTableDaoConfig.initIdentityScope(type);

        pictureTableDaoConfig = daoConfigMap.get(PictureTableDao.class).clone();
        pictureTableDaoConfig.initIdentityScope(type);

        planTableDaoConfig = daoConfigMap.get(PlanTableDao.class).clone();
        planTableDaoConfig.initIdentityScope(type);

        photoOnlineDataBeanDaoConfig = daoConfigMap.get(PhotoOnlineDataBeanDao.class).clone();
        photoOnlineDataBeanDaoConfig.initIdentityScope(type);

        judgeTableDao = new JudgeTableDao(judgeTableDaoConfig, this);
        pictureTableDao = new PictureTableDao(pictureTableDaoConfig, this);
        planTableDao = new PlanTableDao(planTableDaoConfig, this);
        photoOnlineDataBeanDao = new PhotoOnlineDataBeanDao(photoOnlineDataBeanDaoConfig, this);

        registerDao(JudgeTable.class, judgeTableDao);
        registerDao(PictureTable.class, pictureTableDao);
        registerDao(PlanTable.class, planTableDao);
        registerDao(PhotoOnlineDataBean.class, photoOnlineDataBeanDao);
    }
    
    public void clear() {
        judgeTableDaoConfig.clearIdentityScope();
        pictureTableDaoConfig.clearIdentityScope();
        planTableDaoConfig.clearIdentityScope();
        photoOnlineDataBeanDaoConfig.clearIdentityScope();
    }

    public JudgeTableDao getJudgeTableDao() {
        return judgeTableDao;
    }

    public PictureTableDao getPictureTableDao() {
        return pictureTableDao;
    }

    public PlanTableDao getPlanTableDao() {
        return planTableDao;
    }

    public PhotoOnlineDataBeanDao getPhotoOnlineDataBeanDao() {
        return photoOnlineDataBeanDao;
    }

}
